// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TodoList.MVC.API;

#nullable disable

namespace TodoList.MVC.API.Migrations.TodoDb
{
    [DbContext(typeof(TodoContext))]
    [Migration("20230609233542_Move-to-UserAggregateRoot")]
    partial class MovetoUserAggregateRoot
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TodoList.MVC.API.Models.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserAggregateRootId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserAggregateRootId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("TodoList.MVC.API.Models.TodoItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserAggregateRootId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserAggregateRootId");

                    b.ToTable("TodoItems");
                });

            modelBuilder.Entity("TodoList.MVC.API.Models.UserAggregateRoot", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TodoList.MVC.API.Models.Project", b =>
                {
                    b.HasOne("TodoList.MVC.API.Models.UserAggregateRoot", null)
                        .WithMany("Projects")
                        .HasForeignKey("UserAggregateRootId");
                });

            modelBuilder.Entity("TodoList.MVC.API.Models.TodoItem", b =>
                {
                    b.HasOne("TodoList.MVC.API.Models.UserAggregateRoot", null)
                        .WithMany("TodoItems")
                        .HasForeignKey("UserAggregateRootId");
                });

            modelBuilder.Entity("TodoList.MVC.API.Models.UserAggregateRoot", b =>
                {
                    b.Navigation("Projects");

                    b.Navigation("TodoItems");
                });
#pragma warning restore 612, 618
        }
    }
}
